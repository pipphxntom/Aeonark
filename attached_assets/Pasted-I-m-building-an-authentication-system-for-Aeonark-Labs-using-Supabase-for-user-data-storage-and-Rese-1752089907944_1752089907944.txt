I'm building an authentication system for Aeonark Labs using Supabase for user data storage and Resend for OTP delivery. Currently, the "Sign In" flow needs to intelligently distinguish between new and existing users: if a user is entering their email for the first time (i.e., they don’t yet exist in the Supabase users table), the system should treat it as a Sign Up process and label the UI as “Sign Up”; if the email already exists, it should be labeled as Log In. After entering their email, regardless of whether it's signup or login, the user should be prompted to enter a 6-digit OTP sent via Resend to that email. OTP must work seamlessly across both laptop and mobile devices—currently, OTPs are not being received on mobile or when using any email other than aeonark.lab@gmail.com. This is likely due to Resend’s from domain being improperly configured or DMARC/DKIM not being verified—ensure the sending domain is properly authenticated, and update Resend's from field to support any recipient email, not just the registered one. After OTP verification, if the user is signing up for the first time, they should be redirected to an onboarding page where we ask additional questions like name, startup, and goals. These questions must only be asked on first signup, and a hasOnboarded: true flag should be saved in the Supabase user metadata. On future logins, skip this step entirely and redirect directly to the cart/dashboard. Also, make sure session tokens persist cleanly in mobile viewports to fix OTP failures on mobile devices—use httpOnly cookies or localStorage tokens that are valid cross-device. Fix conditional routing logic so that if a user is new and completes OTP verification, they go to onboarding and then cart; if they already exist, they only do OTP and go straight to cart. Additionally, once signup is complete, store all user info in Supabase including their name, goals, and email, and ensure OTP verification is handled securely using Resend with expiry logic, while Supabase only stores persistent user state. Lastly, show real-time feedback on the frontend for OTP sent, OTP verified, or errors like “user not found” or “OTP expired.”